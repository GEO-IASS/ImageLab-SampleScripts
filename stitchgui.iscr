program StitchImages;

(******************************************************************************
  #AUTHOR  Hans Lohninger, Epina GmbH
  #VERSION 1.0
  #PUBLISH private
  #CAPTION creates a mosaic image from tiles
  #MINILABVERSION 2.08
  #INSTALLBTN 1 stitch.bmp create a mosaic from several tiles
 ******************************************************************************)

(*******************************************************************************

    Anyone is free to copy, modify, publish, use, compile, sell, or
    distribute this software, either in source code form or as a compiled
    binary, for any purpose, commercial or non-commercial, and by any
    means.

    In jurisdictions that recognize copyright laws, the author or authors
    of this software dedicate any and all copyright interest in the
    software to the public domain. We make this dedication for the benefit
    of the public at large and to the detriment of our heirs and
    successors. We intend this dedication to be an overt act of
    relinquishment in perpetuity of all present and future rights to this
    software under copyright law.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
    IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
    OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
    ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
    OTHER DEALINGS IN THE SOFTWARE.

*******************************************************************************)

var
  ImgPars        : TImgCollection;
  Mode           : TStitchMode;
  LayersToExtract: TIntArray;
  FNames         : TStrArray;
  res            : integer;
  il             : integer;
  LType          : TLayerType;
  LCaption       : string;
  AlignRange     : integer;
  SpecDesc       : string;
  Rev            : boolean;
  TechDt         : integer;
  DerivOrder     : integer;
  err1           : integer;

begin
res := StitchDialog (Mode, FNames, ImgPars, LayersToExtract, AlignRange, SpecDesc);
case res of
    mrOK : begin
           ShowStatus ('stitching a mosaic...',5);
           err1 := StitchCubes (Mode, FNames, ImgPars, LayersToExtract, SpecDesc);
           case err1 of
             0 : begin
                 if Mode = smSelLayers then
                   begin
                   for il:=1 to length(LayersToExtract) do
                     begin
                     GetCubeLayerProps(il, LType, DerivOrder, LCaption, Rev, TechDt);
                     SetCubeLayerProps(il, ctIRspec, DerivOrder, LCaption, Rev, TechDt);
                     end;
                   end;
                 DisplaySpectrum (1,1,1,1,0,0,0,0,true,false,'');
                 end;
            -1 : MessageDlg ('The list of tiles is empty', mtError, [mbOK]);
            -2 : MessageDlg ('Cannot stitch the data, available memory is not sufficient', mtError, [mbOK]);
           end;
           end;
      -1 : MessageDlg ('no sparse frequencies defined', mtError, [mbOK]);
      -2 : MessageDlg ('no descriptors defined', mtError, [mbOK]);
      -3 : MessageDlg ('no tiles selected', mtError, [mbOK]);
end;
end.




