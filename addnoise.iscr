program AddNoise;

(*************************************************************************)
{
  #AUTHOR Hans Lohninger, Epina GmbH
  #VERSION 1.00
  #CAPTION adds noise to the data
  #MINILABVERSION 1.83
}
(*************************************************************************)

(*******************************************************************************

    Anyone is free to copy, modify, publish, use, compile, sell, or
    distribute this software, either in source code form or as a compiled
    binary, for any purpose, commercial or non-commercial, and by any
    means.

    In jurisdictions that recognize copyright laws, the author or authors
    of this software dedicate any and all copyright interest in the
    software to the public domain. We make this dedication for the benefit
    of the public at large and to the detriment of our heirs and
    successors. We intend this dedication to be an overt act of
    relinquishment in perpetuity of all present and future rights to this
    software under copyright law.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
    IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
    OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
    ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
    OTHER DEALINGS IN THE SOFTWARE.

*******************************************************************************)

var
  sl             : integer;
  errcnt         : integer;
  DlgResult      : TVariantArray;
  errcode        : integer;

begin
sl := GetCubeSize(dimL);          // the number of layers
CreateDialog (200, 20,            // AlignAt, TopPos
              'Adding Noise',     // DialogCaption
              [gcLabel, gcNumio, gcNumio], // Components
              ['Please set the noise amplitudes', 'Homoscedastic','Heteroscedastic']); // Captions
ConfigDlgComponent(2, 'low=0; high=100; prec=0; val=10');
ConfigDlgComponent(3, 'low=0; high=2.0; prec=2; inc=0.05');
DlgResult := ShowDialog;
if DlgResult[0] = 0 then
  begin
  errcode := PerformBulkTransform
                       (15,          // ConversionMode
                        0,           // BitMask
                        1,           // TimeSlot,
                        1, sl,       // FirstLayer, LastLayer
                        DlgResult[2],// ParA
                        DlgResult[3],// ParB
                        true,        // FeedBack
                        errcnt);     // ErrCnt
  if errcode = 0
    then MessageDlg('Noise has been successfully added', mtInformation, [mbok])
    else MessageDlg('The following error occurred: '+IntToStr(errcode), mtError, [mbok])
  end;
end.




