program TemplateScript;

(*************************************************************************
  The following script is a template which declares and populates a few often
  needed global variables. Purists may simply delete any unused variables
  (however it does not deteriorate the performance of the script if these
  variables are left unused).

  The following meta tags should be adjusted. They are used for collecting
  and presenting information about the script in the script list:
  #AUTHOR  N.N.
  #VERSION 1.0
  #PUBLISH private
  #CAPTION a short description of the purpose of the script
  #MINILABVERSION 1.82
  #READONLY FALSE

      In order to install a shortcut button for the script you have to replace
      the zero digit in the following meta tag by a positive number; further you
      should change the default icon (scrbtn_1.bmp) and replace it by your own icon.
  #INSTALLBTN 0 scrbtn_1.bmp this text is displayed as a hint when the mouse hovers the button
      For details on shortcut buttons please consult the help file (section
      "Script Language/Meta Information").
 *************************************************************************)

(*******************************************************************************

    Anyone is free to copy, modify, publish, use, compile, sell, or
    distribute this software, either in source code form or as a compiled
    binary, for any purpose, commercial or non-commercial, and by any
    means.

    In jurisdictions that recognize copyright laws, the author or authors
    of this software dedicate any and all copyright interest in the
    software to the public domain. We make this dedication for the benefit
    of the public at large and to the detriment of our heirs and
    successors. We intend this dedication to be an overt act of
    relinquishment in perpetuity of all present and future rights to this
    software under copyright law.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
    IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
    OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
    ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
    OTHER DEALINGS IN THE SOFTWARE.

*******************************************************************************)

var                                 // global variables
  sx, sy, sl, st : integer;         // the dimensions if the data cube
  spec           : TDoubleArray;    // used for accessing single spectra
  imgmat         : TDouble2DArray;  // used for images

//-----------------------------------------------------------------------------
procedure InitGlobalVars;
//-----------------------------------------------------------------------------

begin
sx := GetCubeSize(dimX);   // retrieve the number of pixels along the x-axis
sy := GetCubeSize(dimY);   //   .. along the y-axis
sl := GetCubeSize(dimL);   //   .. the number of layers
st := GetCubeSize(dimT);   //   .. the number of time slots
ResizeVector (spec, sl);     // sets the size of spectral data array
ResizeMatrix (imgmat,sx,sy); // sets the size of the image matrix
end;

//-----------------------------------------------------------------------------
// the main program starts here
//-----------------------------------------------------------------------------

var
  i, j, k        : integer;         // general purpose integer variables
  ix, iy, il, it : integer;         // used as indices of the data cube
  astr           : string;          // an auxiliary string

begin
InitGlobalVars;
//
//  put in your code here.....
//
end.





